{"ast":null,"code":"var _jsxFileName = \"E:\\\\blogwiki-dev1\\\\src\\\\Components\\\\HeroBanner.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../CSS/HeroBanner.css';\nimport image1 from '../ImageRepoSRC/Women2.jpeg';\nimport image2 from '../ImageRepoSRC/Women17.jpeg';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeroBanner = () => {\n  _s();\n  const [newsData, setNewsData] = useState([]);\n  const [currentNews, setCurrentNews] = useState(0);\n  useEffect(() => {\n    // Fetch your news data from an API or a local source\n    // Replace this with your actual data source\n    // For this example, we'll use dummy data\n    const dummyNewsData = [{\n      title: 'Breaking News 1',\n      description: 'This is a breaking news story. Read more to find out.',\n      image: image1\n    }, {\n      title: 'Top Story 2',\n      description: 'Explore the top news story of the day.',\n      image: image2\n    }\n    // Add more news articles here\n    ];\n\n    setNewsData(dummyNewsData);\n  }, []);\n  useEffect(() => {\n    // Automatically switch to the next news article every 5 seconds\n    const timer = setInterval(() => {\n      setCurrentNews(prevNews => (prevNews + 1) % newsData.length);\n    }, 5000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, [newsData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hero-banner\",\n    style: {\n      backgroundImage: newsData.length > 0 ? `url(${newsData[currentNews].image})` : 'none' // Set the image as background if data is available\n    },\n    children: newsData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"news-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: newsData[currentNews].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: newsData[currentNews].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/BlogPage\",\n          className: \"read-more\",\n          children: \"TestLink\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(HeroBanner, \"Z4qwkj+qqeh9/nrUbpdnsCBfjgg=\");\n_c = HeroBanner;\nexport default HeroBanner;\nvar _c;\n$RefreshReg$(_c, \"HeroBanner\");","map":{"version":3,"names":["React","useState","useEffect","image1","image2","Link","jsxDEV","_jsxDEV","HeroBanner","_s","newsData","setNewsData","currentNews","setCurrentNews","dummyNewsData","title","description","image","timer","setInterval","prevNews","length","clearInterval","className","style","backgroundImage","children","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["E:/blogwiki-dev1/src/Components/HeroBanner.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../CSS/HeroBanner.css';\r\nimport image1 from '../ImageRepoSRC/Women2.jpeg';\r\nimport image2 from '../ImageRepoSRC/Women17.jpeg';\r\nimport { Link } from \"react-router-dom\";\r\nconst HeroBanner = () => {\r\n  const [newsData, setNewsData] = useState([]);\r\n  const [currentNews, setCurrentNews] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // Fetch your news data from an API or a local source\r\n    // Replace this with your actual data source\r\n    // For this example, we'll use dummy data\r\n    const dummyNewsData = [\r\n      {\r\n        title: 'Breaking News 1',\r\n        description: 'This is a breaking news story. Read more to find out.',\r\n        image: image1,\r\n      },\r\n      {\r\n        title: 'Top Story 2',\r\n        description: 'Explore the top news story of the day.',\r\n        image: image2,\r\n      },\r\n      // Add more news articles here\r\n    ];\r\n\r\n    setNewsData(dummyNewsData);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Automatically switch to the next news article every 5 seconds\r\n    const timer = setInterval(() => {\r\n      setCurrentNews((prevNews) => (prevNews + 1) % newsData.length);\r\n    }, 5000);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, [newsData]);\r\n\r\n  return (\r\n    <div\r\n      className=\"hero-banner\"\r\n      style={{\r\n        backgroundImage: newsData.length > 0 ? `url(${newsData[currentNews].image})` : 'none', // Set the image as background if data is available\r\n      }}\r\n    >\r\n      {newsData.length > 0 && (\r\n        <div className=\"hero-content\">\r\n          <div className=\"news-details\">\r\n            <h1>{newsData[currentNews].title}</h1>\r\n            <p>{newsData[currentNews].description}</p>\r\n            {/* <a href=\"/BlogPage\" className=\"read-more\">\r\n              Read More\r\n            </a> */}\r\n            <Link to='/BlogPage' className=\"read-more\">TestLink</Link>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeroBanner;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,uBAAuB;AAC9B,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,MAAM,MAAM,8BAA8B;AACjD,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACxC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd;IACA;IACA;IACA,MAAMY,aAAa,GAAG,CACpB;MACEC,KAAK,EAAE,iBAAiB;MACxBC,WAAW,EAAE,uDAAuD;MACpEC,KAAK,EAAEd;IACT,CAAC,EACD;MACEY,KAAK,EAAE,aAAa;MACpBC,WAAW,EAAE,wCAAwC;MACrDC,KAAK,EAAEb;IACT;IACA;IAAA,CACD;;IAEDO,WAAW,CAACG,aAAa,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAENZ,SAAS,CAAC,MAAM;IACd;IACA,MAAMgB,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC9BN,cAAc,CAAEO,QAAQ,IAAK,CAACA,QAAQ,GAAG,CAAC,IAAIV,QAAQ,CAACW,MAAM,CAAC;IAChE,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAM;MACXC,aAAa,CAACJ,KAAK,CAAC;IACtB,CAAC;EACH,CAAC,EAAE,CAACR,QAAQ,CAAC,CAAC;EAEd,oBACEH,OAAA;IACEgB,SAAS,EAAC,aAAa;IACvBC,KAAK,EAAE;MACLC,eAAe,EAAEf,QAAQ,CAACW,MAAM,GAAG,CAAC,GAAI,OAAMX,QAAQ,CAACE,WAAW,CAAC,CAACK,KAAM,GAAE,GAAG,MAAM,CAAE;IACzF,CAAE;IAAAS,QAAA,EAEDhB,QAAQ,CAACW,MAAM,GAAG,CAAC,iBAClBd,OAAA;MAAKgB,SAAS,EAAC,cAAc;MAAAG,QAAA,eAC3BnB,OAAA;QAAKgB,SAAS,EAAC,cAAc;QAAAG,QAAA,gBAC3BnB,OAAA;UAAAmB,QAAA,EAAKhB,QAAQ,CAACE,WAAW,CAAC,CAACG;QAAK;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtCvB,OAAA;UAAAmB,QAAA,EAAIhB,QAAQ,CAACE,WAAW,CAAC,CAACI;QAAW;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAI1CvB,OAAA,CAACF,IAAI;UAAC0B,EAAE,EAAC,WAAW;UAACR,SAAS,EAAC,WAAW;UAAAG,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrB,EAAA,CAzDID,UAAU;AAAAwB,EAAA,GAAVxB,UAAU;AA2DhB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}